<style>
    .error{
        color: red;
    }
        .classrooms {
        display: flex;
        flex-wrap: wrap;
        margin: -15px;
    }

    .classroom-card {
        flex: 0 0 300px;
        margin: 15px;
        border: 2px solid #ddd;
        border-radius: 5px;
        overflow: hidden;
    }

    .classroom-card-header {
        display: flex;
        align-items: center;
        padding: 20px;
        background-color: #d6eaff;
    }

    .classroom-card-icon {
        font-size: 32px;
        color: #007bff;
        margin-right: 20px;
    }

    .classroom-card-title h2 {
        margin: 0;
        font-size: 24px;
    }

    .classroom-card-title p {
        margin: 0;
        font-size: 16px;
        color: #999;
    }

    .classroom-card-body {
        padding: 20px;
    }

    .badge-success {
        color: #fff;
        background-color: #28a745;
    }

    .badge-danger {
        color: #fff;
        background-color: #dc3545;
    }

    .btn {
        display: inline-block;
        font-weight: 400;
        color: #fff;
        text-align: center;
        vertical-align: middle;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        background-color: #007bff;
        border: 1px solid #007bff;
        border-radius: 0.25rem;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        line-height: 1.5;
        transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

        .btn:hover {
            background-color: #0069d9;
            border-color: #0062cc;
        }
</style>
@{
    ViewData["Title"] = "Home Page";
}

<div id="dashboard-buttons" style="display: flex;justify-content: center;">
    <button id="join-class-button" class="btn btn-primary d-none">Join Class</button>
    <button id="create-class-button" class="btn btn-primary d-none" data-toggle="modal" data-target="#exampleModal">Create Class</button>
</div>

<div class="classrooms">
</div>

@* modal create class*@
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Create Class</h5>
                <button type="button" class="close btn btn-danger" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="create-class-form">
                    <div class="form-group">
                        <label for="class-name" class="col-form-label">Class Name:</label>
                        <input type="text" class="form-control" name="classname" id="class-name" required>
                    </div>
                    <div class="form-group">
                        <label for="class-description" class="col-form-label">Class Description:</label>
                        <textarea class="form-control" id="class-description"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="submit-create-class">Create Class</button>
            </div>
        </div>
    </div>

    @section Scripts {
        <partial name="_ValidationScriptsPartial" />
        <script type="text/javascript">
     $(document).ready(function() {
            debugger;
            // Get the token from local storage
            const token = localStorage.getItem('token');
            //redirect to the login page if the local storage is empty
            if(token == null)
            {
                window.location.href = "/Login";
                return;
            }

            // Decode the token to get the expiration time
            const decodedToken = jwt_decode(token);
            // Check if the token has expired
            const expirationTime = decodedToken.exp;
            //get user name from token
            //const userName = decodedToken.unique_name;

            if (Date.now() >= expirationTime * 1000) {
                 // Prompt the user to log in again
              alert('Your session has expired. Please log in again.');
            } else {
                
                $("#create-class-form").validate({
                    rules:{
                        classname:{
                            required:true,
                        }        
                    }
                });

              $('#create-class-button').click(function() {
                 //show modal
                     $('#exampleModal').modal('show');
              });
           // Make the AJAX call to the API to load class Students
            $.ajax({
                url: 'https://localhost:7290/api/ClassStudents',
                type: 'GET',
                headers: { 'Authorization': token },
                success: function(result) {
                    //check if result.classes has element in list
                    if(result.classes.length === 0){
                        // Display the Join Class or Create Class button based on the user's role
                        if (result.role.toLowerCase() === 'student') {
                            $('#join-class-button').removeClass("d-none");
                        } else if (result.role.toLowerCase() === 'teacher') {
                            $('#create-class-button').removeClass("d-none");
                        }
                    }else{
        debugger;
                // Display the classes
                result.classes.forEach(function(cls) {
                   const listItem = ` <div class="classroom-card">
                <div class="classroom-card-header">
                    <div class="classroom-card-icon"><i class="fa fa-chalkboard"></i></div>
                    <div class="classroom-card-title">
                        <h2>${cls.className}</h2>
                        <p>Class Code: ${cls.classCode}</p>
                        <p>Created Date: ${convertDate(cls.createAt)}</p>
                        <span class="badge badge-${cls.classStatus == 1?'success':'danger'}" id="status-active">${cls.classStatus == 1?'Active':'Stopped'}</span>
                    </div>
                </div>
                <div class="classroom-card-body">
                    <p>${cls.classDescription}</p>  
                </div>
            </div>`;
                    $('.classrooms').append(listItem);
                });
                    }
                },
                error: function(xhr, status, error) {
                  alert(xhr.responseText);
                }
            });

            //convert "2023-03-14T19:58:30.313" to "2023-03-14"
            function convertDate(date) {
                var date = new Date(date);
                var month = date.getMonth() + 1;
                var day = date.getDate();
                var year = date.getFullYear();
                return year + '-' + month + '-' + day;
            }

                $('#submit-create-class').click(function(event) {
                    event.preventDefault();
                    //validate the form
                    if (!$("#create-class-form").valid()) {
                        return;
                    }
                    //generate random class code with 4 digit
                    var classCode = Math.floor(1000 + Math.random() * 9000);

                    // Make the AJAX call to create the class
                    $.ajax({
                    url: 'https://localhost:7290/api/Classes',
                    method: 'POST',
                    data: JSON.stringify({
                        ClassName:  $('#class-name').val(),
                        ClassDescription:$('#class-description').val(),
                        ClassCode: classCode.toString(),
                        ClassStatus: 1,
                        TeacherId : parseInt(decodedToken.sub, 10)
                    }),
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': 'Bearer ' + localStorage.getItem('token'),
                    },
                    success: function(result) {
                        //add d-none class to button
                        $('#create-class-button').removeClass("d-none");
                        //add html to show class
                        const classHTML = ` <div class="classroom-card">
                <div class="classroom-card-header">
                    <div class="classroom-card-icon"><i class="fa fa-chalkboard"></i></div>
                    <div class="classroom-card-title">
                        <h2>${result.className}</h2>
                        <p>Class Code: ${result.classCode}</p>
                        <p>Created Date: ${convertDate(result.createAt)}</p>
                        <span class="badge badge-${result.classStatus == 1?'success':'danger'}" id="status-active">${result.classStatus == 1?'Active':'Stopped'}</span>
                    </div>
                </div>
                <div class="classroom-card-body">
                    <p>${result.classDescription}</p>  
                </div>
            </div>`;
                        $('.classrooms').append(classHTML);
                        //add d-none class to button
                        $("#create-class-button").addClass("d-none");
                        //close modal
                        $('#exampleModal').modal('hide');

                    },
                    error: function(xhr, status, error) {
                       alert(xhr.responseText);
                    },
            });
        });
     }
    });

        </script>
}
