@{
    ViewData["Title"] = "Class Detail";
}
<style>
    /* Overall styles */
    body {
        font-family: sans-serif;
    }

    /* Tab styles */
    .tabview {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        margin: 0 30px;
    }

        .tabview button {
            background-color: transparent;
            border: none;
            outline: none;
            cursor: pointer;
            padding: 10px;
            margin-right: 10px;
            font-size: 16px;
            font-weight: bold;
            color: #777;
            transition: color 0.2s ease-in-out;
        }

            .tabview button.active {
                color: #000;
                border-bottom: 3px solid #000;
            }
    li{
        list-style-type: none;
    }

    .teacher-name{
        font-weight: bold;
    }

    .add-student{
        cursor: pointer;
    }

    /* Content styles */
    .tabcontent {
        display: none;
        padding: 20px;
        border-top: 2px solid #aca4a4;
    }

        .tabcontent.active {
            display: block;
        }
</style>
<div class="tabview">
    <strong class="class-title" style="font-size: xx-large;"></strong>
    <button class="tablinks active">Stream</button>
    <button class="tablinks">Assignment</button>
    <button class="tablinks">People</button>
</div>

<div id="tab1" class="tabcontent active">
 </div>

<div id="tab2" class="tabcontent">
</div>

<div id="tab3" class="tabcontent">
    <div>
        <h3 style=" color: #0a5e15;">Teachers</h3>
        <ul id="teacher-list" >
            <!-- The list of teachers will be dynamically generated here -->
        </ul>
        <div style="display: flex; justify-content: space-between; align-items: center;">
             <h3 style=" color: #0a5e15;">Students</h3>
            <strong class="add-student">Add Student <i class="fa-solid fa-user-plus"></i></strong>
        </div>
        <ul id="student-list" >
            <!-- The list of students will be dynamically generated here -->
        </ul>
    </div>
</div>

@section Scripts{
    <partial name="_ValidationScriptsPartial" />
    <script>
  $(document).ready(function() {
            debugger;
           const token = localStorage.getItem('token');
            //redirect to the login page if the local storage is empty
            if(token == null)
            {
                window.location.href = "/Login";
                return;
            }

            // Decode the token to get the expiration time
            const decodedToken = jwt_decode(token);
            // Check if the token has expired
            const expirationTime = decodedToken.exp;
            //get user name from token
            //const userName = decodedToken.unique_name;

            if (Date.now() >= expirationTime * 1000) {
                 // Prompt the user to log in again
              alert('Your session has expired. Please log in again.');
            } else {
                 // Get all the tabs and the content
        const tabButtons = document.querySelectorAll(".tablinks");
        const tabContents = document.querySelectorAll(".tabcontent");
        var url = window.location.href;
        const classId = url.substring(url.lastIndexOf('/') + 1);

        function showTab(tabIndex) {
            // Hide all tab contents
            tabContents.forEach((content) => {
                content.style.display = "none";
            });

            // Remove active class from all tab buttons
            tabButtons.forEach((button) => {
                button.classList.remove("active");
            });

            // Show the selected tab content and set the corresponding button as active
            const selectedTab = tabContents[tabIndex];
            const selectedButton = tabButtons[tabIndex];
            
        if(tabIndex == 2){
            //call ajax to get data
            $.ajax({
                url: 'https://localhost:7290/api/ClassStudents/' + classId,
                type: 'GET',
                headers: { 'Authorization': 'Bearer ' + token },
                success: function (data) {
                    //get data element that has data.userRole.roleName = "student"
                    var studentList = data.filter(function (item) {
                        return item.userRole.roleName.toLowerCase() == "student";
                    });
                     //get data element that has data.userRole.roleName = "teacher"
                    var teacherList = data.filter(function (item) {
                        return item.userRole.roleName.toLowerCase() == "teacher";
                    })

                    if(studentList.length == 0)
                    {
                        $("#student-list").append("<li>No student in this class</li>");
                    }else{
                        //looping through studentList and append to student-list
                        for (var i = 0; i < studentList.length; i++) {
                            var student = studentList[i];
                            var html = `<div id="user-item-template">
                                        <li>
                                            <input type="checkbox" class="user-checkbox" id=${student.id}>
                                            <span class="user-name">${student.fullName}</span>
                                        </li>
                                    </div>`
                            //append html to student-list
                            $("#student-list").append(html);
                        }
                    }
                   
                    //looping through teacherList and append to teacher-list
                    for (var i = 0; i < teacherList.length; i++) {
                        var teacher = teacherList[i];
                        var html = `<div id="user-item-template">
                                    <li>
                                       <i class="fa-solid fa-graduation-cap"></i>
                                        <a class="teacher-name">${teacher.fullName}</a>
                                    </li>
                                </div>`
                        //append html to teacher-list
                        $("#teacher-list").append(html);
                    }
                },
                error: function (xhr, status, error) {
                    alert(xhr.responseText);
                }
            })
        }
           

            selectedTab.style.display = "block";
            selectedButton.classList.add("active");
        }

        // Show the first tab by default
        showTab(0);

        // Add click event listeners to tab buttons
        tabButtons.forEach((button, index) => {
            button.addEventListener("click", () => {
                showTab(index);
            });
        });

            //make an ajax call
            $.ajax({
                url: 'https://localhost:7290/api/Classes/' + classId,
                type: 'GET',
                headers: { 'Authorization': 'Bearer ' + token },
                success: function (data) {
                    //set class-title html is class name
                    $(".class-title").html(data.className);
                },
                error: function (xhr, status, error) {
                    alert(xhr.responseText);
                }
            })

        }


  });
    </script>
    }